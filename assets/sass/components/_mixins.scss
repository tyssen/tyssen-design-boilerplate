//
// Functions
//

// Working in ems is annoying. Think in pixels by using this handy function, emCalc(#px)
@function emCalc($pxWidth) {
	@return $pxWidth / $base-font-size * 1em;
}

// Creating rems and pixels
@function remCalc($pxWidth) {
	@return $pxWidth / $base-font-size * 1rem;
}

// Grid Calculation for Percentages
@function gridCalc($colNumber, $totalColumns) {
	@return percentage(($colNumber / $totalColumns));
}


//
// Mixins
//

@mixin font-size($font-size: 16){
	font-size: #{$font-size / 16}em;
	// font-size: #{$font-size / 10}rem;
}


// We can control whether or not we have inset shadows edges.
// @mixin inset-shadow($active:true) {
// 	-webkit-box-shadow: $shiny-edge-size $shiny-edge-color inset;
// 	box-shadow: $shiny-edge-size $shiny-edge-color inset;

// 	@if $active { &:active {
// 		-webkit-box-shadow: $shiny-edge-size $shiny-edge-active-color inset;
// 		box-shadow: $shiny-edge-size $shiny-edge-active-color inset; } }
// }

// We use this to add transitions to elements
@mixin single-transition($property:all, $speed:300ms, $ease:ease-out) {
	-webkit-transition: $property $speed $ease;
	-moz-transition: $property $speed $ease;
	transition: $property $speed $ease;
}

// We use this to add box-sizing across browser prefixes
@mixin box-sizing($type:border-box) {
	-moz-box-sizing: $type;
	-webkit-box-sizing: $type;
	box-sizing: $type;
}

// We use this to create equalateral triangles
@mixin css-triangle($triangle-size, $triangle-color, $triangle-direction) {
	content: "";
	display: block;
	width: 0;
	height: 0;
	border: solid $triangle-size;
	@if ($triangle-direction == top) {
		border-color: $triangle-color transparent transparent transparent;
	}
	@if ($triangle-direction == bottom) {
		border-color: transparent transparent $triangle-color transparent;
	}
	@if ($triangle-direction == left) {
		border-color: transparent transparent transparent $triangle-color;
	}
	@if ($triangle-direction == right) {
		border-color: transparent $triangle-color transparent transparent;
	}
}

// We use this to do clear floats
@mixin clearfix() {
	*zoom:1;
	&:before, &:after { content: " "; display: table; }
	&:after { clear: both; }
}

%pie { behavior: url("/assets/js/PIE.htc"); }

@mixin mq($point, $IE9: false, $query1: min, $query2: width) {
    @if $IE9 == true{
        .lt-ie9 & {
            @content;
        }
        @media screen and (#{$query1}-#{$query2}: $point / $base-font-size +em) {
            @content;
        }
    }

    @else {
        @media screen and (#{$query1}-#{$query2}: $point / $base-font-size +em) {
            @content;
        }
    }
}